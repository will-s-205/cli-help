@import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@400;500;700&family=Inter:wght@400;500&family=Karla:wght@400;500;700&display=swap');

* {
  margin: 0; // remove unnecessary gaps
  box-sizing: inherit; // OR // box-sizing: border-box;
}

:root{
  --typeface-karla: 'Karla', sans-serif;
  --typeface-inconsolata: 'Inconsolata', monospace;
  --typeface-inter: 'Inter', monospace;  

  --clr-wet-cement-shade: hsl(0, 0%, 8%);
  --clr-shadow: var(--clr-wet-cement-shade);
  --clr-button-text: var(--clr-shadow);
}

.App {
  --primary: rgb(84, 124, 197);

  color: rgb(185, 172, 172);
  background-color: var(--primary);
  display: flex; // normally all elements in html goes in column but with flex everything changes
  justify-content: center; // OR // margin: 0 auto; // to keep elements and text in the middle between left and right
  align-items: center; //in the middle betwee top and bottom
  height: 100vh;

  transition: background-color .5s; // change of the background color will be smother
  }

// react will keed application strictly in the center of the browser 
#root {
  max-width: 100vw;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: radial-gradient(circle, rgba(213, 213, 213, 1) 37%, rgba(187, 187, 187, 1) 71%); // silver. My favorite
}

// depends on how wide app is its always a good idea to set @media query to match mobile first approach
@media (max-width: 550px) { 

  nav {
    width: 100vw;
  }

  nav>p {
    padding-right: 15px;
    padding-left: 15px;
    text-align: center;
  }

  nav>h1 {
    text-align: center;
  }

  main {
    padding-top: 35px;
    padding-left: 10px;
    padding-right: 10px;
  }

}
